---
- name: Test image
  block:
    - name: Load image from archive
      community.docker.docker_image:
        name: chat-{{ img_name }}
        tag: latest
        load_path: /tmp/chat_image.tar
        source: load
        force_source: true
        force_tag: true

    - import_tasks: redis.yml

    - name: Recreate chat container
      community.docker.docker_container:
        name: chat-{{ img_name }}
        image: chat-{{ img_name }}
        state: "started"
        restart: true
        recreate: true

        env:
          DJANGO_SECRET_KEY: "{{ DJANGO_SECRET_KEY }}"
          HOST_USER_EMAIL: "{{ HOST_USER_EMAIL }}"
          HOST_APP_PASSWORD: "{{ HOST_APP_PASSWORD }}"
          DJANGO_HOST: "{{ django_host }}"
          SOCIAL_AUTH_GOOGLE_OAUTH2_KEY: "{{ SOCIAL_AUTH_GOOGLE_OAUTH2_KEY }}"
          SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET: "{{ SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET }}"
          SOCIAL_AUTH_REDIRECT_IS_HTTPS: "false"
          STAFF_USERS: "{{ STAFF_USERS }}"
          REDIS_HOST: "redis-{{ img_name }}"
          DJANGO_SETTINGS_MODULE: "config.settings_prod"

        published_ports:
          - "8020:8020"

        links:
          - "redis-{{ img_name }}"

    - name: Save container logs to artifacts
      ansible.builtin.shell: |
        nohup docker logs -f chat-{{ img_name }} > /tmp/chat_container_test.log 2>&1 &

    - name: Wait until service is started
      ansible.builtin.uri:
        url: "http://localhost:8020/swagger-ui/"
        follow_redirects: none
        method: GET
      register: _result
      until: _result.status == 200
      retries: 11  # 11 * 5 seconds = 55 seconds
      delay: 5  # Every 5 seconds

    - name: Sleep for 5 minutes to test the service
      ansible.builtin.wait_for:
        timeout: 300
      when: CI is undefined

  always:
    - name: Remove containers
      community.docker.docker_container:
        name: "{{ item }}"
        state: "absent"
      loop:
        - "chat-{{ img_name }}"
        - "redis-{{ img_name }}"

  delegate_to: localhost
